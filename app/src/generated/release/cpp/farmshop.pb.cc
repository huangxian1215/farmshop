// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: farmshop.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "farmshop.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace farmshop {

namespace {

const ::google::protobuf::Descriptor* ClientSession_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientSession_reflection_ = NULL;
const ::google::protobuf::Descriptor* baseType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  baseType_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegistRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegistResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* EditUserInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EditUserInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EditUserInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EditUserInfoResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MsgId_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_farmshop_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_farmshop_2eproto() {
  protobuf_AddDesc_farmshop_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "farmshop.proto");
  GOOGLE_CHECK(file != NULL);
  ClientSession_descriptor_ = file->message_type(0);
  static const int ClientSession_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession, sessionid_),
  };
  ClientSession_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientSession_descriptor_,
      ClientSession::internal_default_instance(),
      ClientSession_offsets_,
      -1,
      -1,
      -1,
      sizeof(ClientSession),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientSession, _internal_metadata_));
  baseType_descriptor_ = file->message_type(1);
  static const int baseType_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseType, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseType, sessionid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseType, object_),
  };
  baseType_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      baseType_descriptor_,
      baseType::internal_default_instance(),
      baseType_offsets_,
      -1,
      -1,
      -1,
      sizeof(baseType),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(baseType, _internal_metadata_));
  RegistRequest_descriptor_ = file->message_type(2);
  static const int RegistRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, password_),
  };
  RegistRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegistRequest_descriptor_,
      RegistRequest::internal_default_instance(),
      RegistRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegistRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, _internal_metadata_));
  RegistResponse_descriptor_ = file->message_type(3);
  static const int RegistResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistResponse, result_),
  };
  RegistResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegistResponse_descriptor_,
      RegistResponse::internal_default_instance(),
      RegistResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegistResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistResponse, _internal_metadata_));
  LoginRequest_descriptor_ = file->message_type(4);
  static const int LoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, password_),
  };
  LoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::internal_default_instance(),
      LoginRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_));
  LoginResponse_descriptor_ = file->message_type(5);
  static const int LoginResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, userinfo_),
  };
  LoginResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginResponse_descriptor_,
      LoginResponse::internal_default_instance(),
      LoginResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _internal_metadata_));
  EditUserInfoRequest_descriptor_ = file->message_type(6);
  static const int EditUserInfoRequest_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, headimg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, realname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, age_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, location_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, ismanager_),
  };
  EditUserInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EditUserInfoRequest_descriptor_,
      EditUserInfoRequest::internal_default_instance(),
      EditUserInfoRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(EditUserInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoRequest, _internal_metadata_));
  EditUserInfoResponse_descriptor_ = file->message_type(7);
  static const int EditUserInfoResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoResponse, result_),
  };
  EditUserInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EditUserInfoResponse_descriptor_,
      EditUserInfoResponse::internal_default_instance(),
      EditUserInfoResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EditUserInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EditUserInfoResponse, _internal_metadata_));
  MsgId_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_farmshop_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientSession_descriptor_, ClientSession::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      baseType_descriptor_, baseType::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegistRequest_descriptor_, RegistRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegistResponse_descriptor_, RegistResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRequest_descriptor_, LoginRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginResponse_descriptor_, LoginResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EditUserInfoRequest_descriptor_, EditUserInfoRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EditUserInfoResponse_descriptor_, EditUserInfoResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_farmshop_2eproto() {
  ClientSession_default_instance_.Shutdown();
  delete ClientSession_reflection_;
  baseType_default_instance_.Shutdown();
  delete baseType_reflection_;
  RegistRequest_default_instance_.Shutdown();
  delete RegistRequest_reflection_;
  RegistResponse_default_instance_.Shutdown();
  delete RegistResponse_reflection_;
  LoginRequest_default_instance_.Shutdown();
  delete LoginRequest_reflection_;
  LoginResponse_default_instance_.Shutdown();
  delete LoginResponse_reflection_;
  EditUserInfoRequest_default_instance_.Shutdown();
  delete EditUserInfoRequest_reflection_;
  EditUserInfoResponse_default_instance_.Shutdown();
  delete EditUserInfoResponse_reflection_;
}

void protobuf_InitDefaults_farmshop_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ClientSession_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  baseType_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RegistRequest_default_instance_.DefaultConstruct();
  RegistResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EditUserInfoRequest_default_instance_.DefaultConstruct();
  EditUserInfoResponse_default_instance_.DefaultConstruct();
  ClientSession_default_instance_.get_mutable()->InitAsDefaultInstance();
  baseType_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegistRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegistResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  EditUserInfoRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  EditUserInfoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_farmshop_2eproto_once_);
void protobuf_InitDefaults_farmshop_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_farmshop_2eproto_once_,
                 &protobuf_InitDefaults_farmshop_2eproto_impl);
}
void protobuf_AddDesc_farmshop_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_farmshop_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016farmshop.proto\022\010farmshop\032\031google/proto"
    "buf/any.proto\"\"\n\rClientSession\022\021\n\tsessio"
    "nId\030\001 \001(\005\"b\n\010baseType\022\035\n\004type\030\001 \001(\0162\017.fa"
    "rmshop.MsgId\022\021\n\tsessionId\030\002 \001(\t\022$\n\006objec"
    "t\030\003 \003(\0132\024.google.protobuf.Any\"/\n\rRegistR"
    "equest\022\014\n\004name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\" "
    "\n\016RegistResponse\022\016\n\006result\030\001 \001(\005\".\n\014Logi"
    "nRequest\022\014\n\004name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t"
    "\"^\n\rLoginResponse\022\016\n\006result\030\001 \001(\005\022\014\n\004nam"
    "e\030\002 \001(\t\022/\n\010userinfo\030\003 \001(\0132\035.farmshop.Edi"
    "tUserInfoRequest\"\231\001\n\023EditUserInfoRequest"
    "\022\013\n\003uid\030\001 \001(\005\022\017\n\007headimg\030\002 \001(\t\022\020\n\010realNa"
    "me\030\003 \001(\t\022\013\n\003sex\030\004 \001(\010\022\013\n\003age\030\005 \001(\005\022\023\n\013ph"
    "oneNumber\030\006 \001(\t\022\020\n\010location\030\007 \001(\t\022\021\n\tisM"
    "anager\030\010 \001(\010\"&\n\024EditUserInfoResponse\022\016\n\006"
    "result\030\001 \001(\005*\223\001\n\005MsgId\022\017\n\013CONNECT_REQ\020\000\022"
    "\017\n\013CONNECT_RES\020\001\022\016\n\nREGIST_REQ\020\002\022\016\n\nREGI"
    "ST_RES\020\003\022\r\n\tLOGIN_REQ\020\004\022\r\n\tLOGIN_RES\020\005\022\024"
    "\n\020EditUserInfo_REQ\020\006\022\024\n\020EditUserInfo_RES"
    "\020\007B \n\024com.example.farmshopB\010farmshopb\006pr"
    "oto3", 804);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "farmshop.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_farmshop_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_farmshop_2eproto_once_);
void protobuf_AddDesc_farmshop_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_farmshop_2eproto_once_,
                 &protobuf_AddDesc_farmshop_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_farmshop_2eproto {
  StaticDescriptorInitializer_farmshop_2eproto() {
    protobuf_AddDesc_farmshop_2eproto();
  }
} static_descriptor_initializer_farmshop_2eproto_;
const ::google::protobuf::EnumDescriptor* MsgId_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MsgId_descriptor_;
}
bool MsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientSession::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientSession::ClientSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.ClientSession)
}

void ClientSession::InitAsDefaultInstance() {
}

ClientSession::ClientSession(const ClientSession& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.ClientSession)
}

void ClientSession::SharedCtor() {
  sessionid_ = 0;
  _cached_size_ = 0;
}

ClientSession::~ClientSession() {
  // @@protoc_insertion_point(destructor:farmshop.ClientSession)
  SharedDtor();
}

void ClientSession::SharedDtor() {
}

void ClientSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientSession::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientSession_descriptor_;
}

const ClientSession& ClientSession::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientSession> ClientSession_default_instance_;

ClientSession* ClientSession::New(::google::protobuf::Arena* arena) const {
  ClientSession* n = new ClientSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientSession::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.ClientSession)
  sessionid_ = 0;
}

bool ClientSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.ClientSession)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 sessionId = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.ClientSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.ClientSession)
  return false;
#undef DO_
}

void ClientSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.ClientSession)
  // optional int32 sessionId = 1;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sessionid(), output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.ClientSession)
}

::google::protobuf::uint8* ClientSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.ClientSession)
  // optional int32 sessionId = 1;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sessionid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.ClientSession)
  return target;
}

size_t ClientSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.ClientSession)
  size_t total_size = 0;

  // optional int32 sessionId = 1;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.ClientSession)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.ClientSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.ClientSession)
    UnsafeMergeFrom(*source);
  }
}

void ClientSession::MergeFrom(const ClientSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.ClientSession)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientSession::UnsafeMergeFrom(const ClientSession& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void ClientSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.ClientSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientSession::CopyFrom(const ClientSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.ClientSession)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientSession::IsInitialized() const {

  return true;
}

void ClientSession::Swap(ClientSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientSession::InternalSwap(ClientSession* other) {
  std::swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientSession::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientSession_descriptor_;
  metadata.reflection = ClientSession_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientSession

// optional int32 sessionId = 1;
void ClientSession::clear_sessionid() {
  sessionid_ = 0;
}
::google::protobuf::int32 ClientSession::sessionid() const {
  // @@protoc_insertion_point(field_get:farmshop.ClientSession.sessionId)
  return sessionid_;
}
void ClientSession::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:farmshop.ClientSession.sessionId)
}

inline const ClientSession* ClientSession::internal_default_instance() {
  return &ClientSession_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int baseType::kTypeFieldNumber;
const int baseType::kSessionIdFieldNumber;
const int baseType::kObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

baseType::baseType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.baseType)
}

void baseType::InitAsDefaultInstance() {
}

baseType::baseType(const baseType& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.baseType)
}

void baseType::SharedCtor() {
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

baseType::~baseType() {
  // @@protoc_insertion_point(destructor:farmshop.baseType)
  SharedDtor();
}

void baseType::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void baseType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* baseType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return baseType_descriptor_;
}

const baseType& baseType::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<baseType> baseType_default_instance_;

baseType* baseType::New(::google::protobuf::Arena* arena) const {
  baseType* n = new baseType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void baseType::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.baseType)
  type_ = 0;
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  object_.Clear();
}

bool baseType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.baseType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .farmshop.MsgId type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::farmshop::MsgId >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sessionId;
        break;
      }

      // optional string sessionId = 2;
      case 2: {
        if (tag == 18) {
         parse_sessionId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.baseType.sessionId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_object;
        break;
      }

      // repeated .google.protobuf.Any object = 3;
      case 3: {
        if (tag == 26) {
         parse_object:
          DO_(input->IncrementRecursionDepth());
         parse_loop_object:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_object()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_object;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.baseType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.baseType)
  return false;
#undef DO_
}

void baseType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.baseType)
  // optional .farmshop.MsgId type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string sessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.baseType.sessionId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  // repeated .google.protobuf.Any object = 3;
  for (unsigned int i = 0, n = this->object_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->object(i), output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.baseType)
}

::google::protobuf::uint8* baseType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.baseType)
  // optional .farmshop.MsgId type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string sessionId = 2;
  if (this->sessionid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.baseType.sessionId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  // repeated .google.protobuf.Any object = 3;
  for (unsigned int i = 0, n = this->object_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->object(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.baseType)
  return target;
}

size_t baseType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.baseType)
  size_t total_size = 0;

  // optional .farmshop.MsgId type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional string sessionId = 2;
  if (this->sessionid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  // repeated .google.protobuf.Any object = 3;
  {
    unsigned int count = this->object_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void baseType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.baseType)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const baseType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const baseType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.baseType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.baseType)
    UnsafeMergeFrom(*source);
  }
}

void baseType::MergeFrom(const baseType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.baseType)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void baseType::UnsafeMergeFrom(const baseType& from) {
  GOOGLE_DCHECK(&from != this);
  object_.MergeFrom(from.object_);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.sessionid().size() > 0) {

    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
}

void baseType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.baseType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void baseType::CopyFrom(const baseType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.baseType)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool baseType::IsInitialized() const {

  return true;
}

void baseType::Swap(baseType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void baseType::InternalSwap(baseType* other) {
  std::swap(type_, other->type_);
  sessionid_.Swap(&other->sessionid_);
  object_.UnsafeArenaSwap(&other->object_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata baseType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = baseType_descriptor_;
  metadata.reflection = baseType_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// baseType

// optional .farmshop.MsgId type = 1;
void baseType::clear_type() {
  type_ = 0;
}
::farmshop::MsgId baseType::type() const {
  // @@protoc_insertion_point(field_get:farmshop.baseType.type)
  return static_cast< ::farmshop::MsgId >(type_);
}
void baseType::set_type(::farmshop::MsgId value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:farmshop.baseType.type)
}

// optional string sessionId = 2;
void baseType::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& baseType::sessionid() const {
  // @@protoc_insertion_point(field_get:farmshop.baseType.sessionId)
  return sessionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void baseType::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.baseType.sessionId)
}
void baseType::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.baseType.sessionId)
}
void baseType::set_sessionid(const char* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.baseType.sessionId)
}
::std::string* baseType::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.baseType.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* baseType::release_sessionid() {
  // @@protoc_insertion_point(field_release:farmshop.baseType.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void baseType::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:farmshop.baseType.sessionId)
}

// repeated .google.protobuf.Any object = 3;
int baseType::object_size() const {
  return object_.size();
}
void baseType::clear_object() {
  object_.Clear();
}
const ::google::protobuf::Any& baseType::object(int index) const {
  // @@protoc_insertion_point(field_get:farmshop.baseType.object)
  return object_.Get(index);
}
::google::protobuf::Any* baseType::mutable_object(int index) {
  // @@protoc_insertion_point(field_mutable:farmshop.baseType.object)
  return object_.Mutable(index);
}
::google::protobuf::Any* baseType::add_object() {
  // @@protoc_insertion_point(field_add:farmshop.baseType.object)
  return object_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
baseType::mutable_object() {
  // @@protoc_insertion_point(field_mutable_list:farmshop.baseType.object)
  return &object_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
baseType::object() const {
  // @@protoc_insertion_point(field_list:farmshop.baseType.object)
  return object_;
}

inline const baseType* baseType::internal_default_instance() {
  return &baseType_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistRequest::kNameFieldNumber;
const int RegistRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistRequest::RegistRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.RegistRequest)
}

void RegistRequest::InitAsDefaultInstance() {
}

RegistRequest::RegistRequest(const RegistRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.RegistRequest)
}

void RegistRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegistRequest::~RegistRequest() {
  // @@protoc_insertion_point(destructor:farmshop.RegistRequest)
  SharedDtor();
}

void RegistRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegistRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistRequest_descriptor_;
}

const RegistRequest& RegistRequest::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegistRequest> RegistRequest_default_instance_;

RegistRequest* RegistRequest::New(::google::protobuf::Arena* arena) const {
  RegistRequest* n = new RegistRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.RegistRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegistRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.RegistRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.RegistRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.RegistRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.RegistRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.RegistRequest)
  return false;
#undef DO_
}

void RegistRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.RegistRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.RegistRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.RegistRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.RegistRequest)
}

::google::protobuf::uint8* RegistRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.RegistRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.RegistRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.RegistRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.RegistRequest)
  return target;
}

size_t RegistRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.RegistRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.RegistRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegistRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.RegistRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.RegistRequest)
    UnsafeMergeFrom(*source);
  }
}

void RegistRequest::MergeFrom(const RegistRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.RegistRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegistRequest::UnsafeMergeFrom(const RegistRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void RegistRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.RegistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistRequest::CopyFrom(const RegistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.RegistRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegistRequest::IsInitialized() const {

  return true;
}

void RegistRequest::Swap(RegistRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistRequest::InternalSwap(RegistRequest* other) {
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegistRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistRequest_descriptor_;
  metadata.reflection = RegistRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegistRequest

// optional string name = 1;
void RegistRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistRequest::name() const {
  // @@protoc_insertion_point(field_get:farmshop.RegistRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.RegistRequest.name)
}
void RegistRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.RegistRequest.name)
}
void RegistRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.RegistRequest.name)
}
::std::string* RegistRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.RegistRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistRequest::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.RegistRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.RegistRequest.name)
}

// optional string password = 2;
void RegistRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistRequest::password() const {
  // @@protoc_insertion_point(field_get:farmshop.RegistRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.RegistRequest.password)
}
void RegistRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.RegistRequest.password)
}
void RegistRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.RegistRequest.password)
}
::std::string* RegistRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.RegistRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistRequest::release_password() {
  // @@protoc_insertion_point(field_release:farmshop.RegistRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:farmshop.RegistRequest.password)
}

inline const RegistRequest* RegistRequest::internal_default_instance() {
  return &RegistRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistResponse::RegistResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.RegistResponse)
}

void RegistResponse::InitAsDefaultInstance() {
}

RegistResponse::RegistResponse(const RegistResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.RegistResponse)
}

void RegistResponse::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

RegistResponse::~RegistResponse() {
  // @@protoc_insertion_point(destructor:farmshop.RegistResponse)
  SharedDtor();
}

void RegistResponse::SharedDtor() {
}

void RegistResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistResponse_descriptor_;
}

const RegistResponse& RegistResponse::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegistResponse> RegistResponse_default_instance_;

RegistResponse* RegistResponse::New(::google::protobuf::Arena* arena) const {
  RegistResponse* n = new RegistResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.RegistResponse)
  result_ = 0;
}

bool RegistResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.RegistResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.RegistResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.RegistResponse)
  return false;
#undef DO_
}

void RegistResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.RegistResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.RegistResponse)
}

::google::protobuf::uint8* RegistResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.RegistResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.RegistResponse)
  return target;
}

size_t RegistResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.RegistResponse)
  size_t total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.RegistResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegistResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.RegistResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.RegistResponse)
    UnsafeMergeFrom(*source);
  }
}

void RegistResponse::MergeFrom(const RegistResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.RegistResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegistResponse::UnsafeMergeFrom(const RegistResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RegistResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.RegistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistResponse::CopyFrom(const RegistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.RegistResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegistResponse::IsInitialized() const {

  return true;
}

void RegistResponse::Swap(RegistResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistResponse::InternalSwap(RegistResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegistResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistResponse_descriptor_;
  metadata.reflection = RegistResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegistResponse

// optional int32 result = 1;
void RegistResponse::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 RegistResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.RegistResponse.result)
  return result_;
}
void RegistResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.RegistResponse.result)
}

inline const RegistResponse* RegistResponse::internal_default_instance() {
  return &RegistResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kNameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.LoginRequest)
}

void LoginRequest::InitAsDefaultInstance() {
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.LoginRequest)
}

void LoginRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:farmshop.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> LoginRequest_default_instance_;

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.LoginRequest)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.LoginRequest.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.LoginRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.LoginRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.LoginRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.LoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.LoginRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.LoginRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.LoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.LoginRequest)
  size_t total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.LoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.LoginRequest)
    UnsafeMergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.LoginRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginRequest::UnsafeMergeFrom(const LoginRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.LoginRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginRequest::IsInitialized() const {

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// optional string name = 1;
void LoginRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::name() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.LoginRequest.name)
}
void LoginRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.LoginRequest.name)
}
void LoginRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.LoginRequest.name)
}
::std::string* LoginRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.LoginRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.LoginRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginRequest.name)
}

// optional string password = 2;
void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.LoginRequest.password)
}
void LoginRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.LoginRequest.password)
}
void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.LoginRequest.password)
}
::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:farmshop.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginRequest.password)
}

inline const LoginRequest* LoginRequest::internal_default_instance() {
  return &LoginRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kResultFieldNumber;
const int LoginResponse::kNameFieldNumber;
const int LoginResponse::kUserinfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.LoginResponse)
}

void LoginResponse::InitAsDefaultInstance() {
  userinfo_ = const_cast< ::farmshop::EditUserInfoRequest*>(
      ::farmshop::EditUserInfoRequest::internal_default_instance());
}

LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.LoginResponse)
}

void LoginResponse::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userinfo_ = NULL;
  result_ = 0;
  _cached_size_ = 0;
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:farmshop.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &LoginResponse_default_instance_.get()) {
    delete userinfo_;
  }
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResponse_descriptor_;
}

const LoginResponse& LoginResponse::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> LoginResponse_default_instance_;

LoginResponse* LoginResponse::New(::google::protobuf::Arena* arena) const {
  LoginResponse* n = new LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.LoginResponse)
  result_ = 0;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.LoginResponse.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_userinfo;
        break;
      }

      // optional .farmshop.EditUserInfoRequest userinfo = 3;
      case 3: {
        if (tag == 26) {
         parse_userinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_userinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.LoginResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.LoginResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional .farmshop.EditUserInfoRequest userinfo = 3;
  if (this->has_userinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->userinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.LoginResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.LoginResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional .farmshop.EditUserInfoRequest userinfo = 3;
  if (this->has_userinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->userinfo_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.LoginResponse)
  size_t total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .farmshop.EditUserInfoRequest userinfo = 3;
  if (this->has_userinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->userinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.LoginResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.LoginResponse)
    UnsafeMergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.LoginResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginResponse::UnsafeMergeFrom(const LoginResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_userinfo()) {
    mutable_userinfo()->::farmshop::EditUserInfoRequest::MergeFrom(from.userinfo());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.LoginResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginResponse::IsInitialized() const {

  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  std::swap(result_, other->result_);
  name_.Swap(&other->name_);
  std::swap(userinfo_, other->userinfo_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResponse_descriptor_;
  metadata.reflection = LoginResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResponse

// optional int32 result = 1;
void LoginResponse::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 LoginResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginResponse.result)
  return result_;
}
void LoginResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.LoginResponse.result)
}

// optional string name = 2;
void LoginResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginResponse::name() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.LoginResponse.name)
}
void LoginResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.LoginResponse.name)
}
void LoginResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.LoginResponse.name)
}
::std::string* LoginResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.LoginResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResponse::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.LoginResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginResponse.name)
}

// optional .farmshop.EditUserInfoRequest userinfo = 3;
bool LoginResponse::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
void LoginResponse::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
const ::farmshop::EditUserInfoRequest& LoginResponse::userinfo() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginResponse.userinfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::farmshop::EditUserInfoRequest::internal_default_instance();
}
::farmshop::EditUserInfoRequest* LoginResponse::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::farmshop::EditUserInfoRequest;
  }
  // @@protoc_insertion_point(field_mutable:farmshop.LoginResponse.userinfo)
  return userinfo_;
}
::farmshop::EditUserInfoRequest* LoginResponse::release_userinfo() {
  // @@protoc_insertion_point(field_release:farmshop.LoginResponse.userinfo)
  
  ::farmshop::EditUserInfoRequest* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
void LoginResponse::set_allocated_userinfo(::farmshop::EditUserInfoRequest* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginResponse.userinfo)
}

inline const LoginResponse* LoginResponse::internal_default_instance() {
  return &LoginResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditUserInfoRequest::kUidFieldNumber;
const int EditUserInfoRequest::kHeadimgFieldNumber;
const int EditUserInfoRequest::kRealNameFieldNumber;
const int EditUserInfoRequest::kSexFieldNumber;
const int EditUserInfoRequest::kAgeFieldNumber;
const int EditUserInfoRequest::kPhoneNumberFieldNumber;
const int EditUserInfoRequest::kLocationFieldNumber;
const int EditUserInfoRequest::kIsManagerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditUserInfoRequest::EditUserInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.EditUserInfoRequest)
}

void EditUserInfoRequest::InitAsDefaultInstance() {
}

EditUserInfoRequest::EditUserInfoRequest(const EditUserInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.EditUserInfoRequest)
}

void EditUserInfoRequest::SharedCtor() {
  headimg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&ismanager_) -
    reinterpret_cast<char*>(&uid_) + sizeof(ismanager_));
  _cached_size_ = 0;
}

EditUserInfoRequest::~EditUserInfoRequest() {
  // @@protoc_insertion_point(destructor:farmshop.EditUserInfoRequest)
  SharedDtor();
}

void EditUserInfoRequest::SharedDtor() {
  headimg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EditUserInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditUserInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditUserInfoRequest_descriptor_;
}

const EditUserInfoRequest& EditUserInfoRequest::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EditUserInfoRequest> EditUserInfoRequest_default_instance_;

EditUserInfoRequest* EditUserInfoRequest::New(::google::protobuf::Arena* arena) const {
  EditUserInfoRequest* n = new EditUserInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditUserInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.EditUserInfoRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(EditUserInfoRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<EditUserInfoRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(uid_, ismanager_);
  headimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool EditUserInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.EditUserInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 uid = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_headimg;
        break;
      }

      // optional string headimg = 2;
      case 2: {
        if (tag == 18) {
         parse_headimg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->headimg().data(), this->headimg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.EditUserInfoRequest.headimg"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_realName;
        break;
      }

      // optional string realName = 3;
      case 3: {
        if (tag == 26) {
         parse_realName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->realname().data(), this->realname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.EditUserInfoRequest.realName"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sex;
        break;
      }

      // optional bool sex = 4;
      case 4: {
        if (tag == 32) {
         parse_sex:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_age;
        break;
      }

      // optional int32 age = 5;
      case 5: {
        if (tag == 40) {
         parse_age:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_phoneNumber;
        break;
      }

      // optional string phoneNumber = 6;
      case 6: {
        if (tag == 50) {
         parse_phoneNumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.EditUserInfoRequest.phoneNumber"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_location;
        break;
      }

      // optional string location = 7;
      case 7: {
        if (tag == 58) {
         parse_location:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->location().data(), this->location().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "farmshop.EditUserInfoRequest.location"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_isManager;
        break;
      }

      // optional bool isManager = 8;
      case 8: {
        if (tag == 64) {
         parse_isManager:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ismanager_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.EditUserInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.EditUserInfoRequest)
  return false;
#undef DO_
}

void EditUserInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.EditUserInfoRequest)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->uid(), output);
  }

  // optional string headimg = 2;
  if (this->headimg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->headimg().data(), this->headimg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.headimg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->headimg(), output);
  }

  // optional string realName = 3;
  if (this->realname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.realName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->realname(), output);
  }

  // optional bool sex = 4;
  if (this->sex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sex(), output);
  }

  // optional int32 age = 5;
  if (this->age() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->age(), output);
  }

  // optional string phoneNumber = 6;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.phoneNumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->phonenumber(), output);
  }

  // optional string location = 7;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.location");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->location(), output);
  }

  // optional bool isManager = 8;
  if (this->ismanager() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->ismanager(), output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.EditUserInfoRequest)
}

::google::protobuf::uint8* EditUserInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.EditUserInfoRequest)
  // optional int32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->uid(), target);
  }

  // optional string headimg = 2;
  if (this->headimg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->headimg().data(), this->headimg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.headimg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->headimg(), target);
  }

  // optional string realName = 3;
  if (this->realname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->realname().data(), this->realname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.realName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->realname(), target);
  }

  // optional bool sex = 4;
  if (this->sex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sex(), target);
  }

  // optional int32 age = 5;
  if (this->age() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->age(), target);
  }

  // optional string phoneNumber = 6;
  if (this->phonenumber().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.phoneNumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->phonenumber(), target);
  }

  // optional string location = 7;
  if (this->location().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->location().data(), this->location().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "farmshop.EditUserInfoRequest.location");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->location(), target);
  }

  // optional bool isManager = 8;
  if (this->ismanager() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->ismanager(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.EditUserInfoRequest)
  return target;
}

size_t EditUserInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.EditUserInfoRequest)
  size_t total_size = 0;

  // optional int32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  // optional string headimg = 2;
  if (this->headimg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->headimg());
  }

  // optional string realName = 3;
  if (this->realname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->realname());
  }

  // optional bool sex = 4;
  if (this->sex() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 age = 5;
  if (this->age() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->age());
  }

  // optional string phoneNumber = 6;
  if (this->phonenumber().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phonenumber());
  }

  // optional string location = 7;
  if (this->location().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->location());
  }

  // optional bool isManager = 8;
  if (this->ismanager() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditUserInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.EditUserInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EditUserInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EditUserInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.EditUserInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.EditUserInfoRequest)
    UnsafeMergeFrom(*source);
  }
}

void EditUserInfoRequest::MergeFrom(const EditUserInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.EditUserInfoRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EditUserInfoRequest::UnsafeMergeFrom(const EditUserInfoRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.headimg().size() > 0) {

    headimg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimg_);
  }
  if (from.realname().size() > 0) {

    realname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realname_);
  }
  if (from.sex() != 0) {
    set_sex(from.sex());
  }
  if (from.age() != 0) {
    set_age(from.age());
  }
  if (from.phonenumber().size() > 0) {

    phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
  }
  if (from.location().size() > 0) {

    location_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_);
  }
  if (from.ismanager() != 0) {
    set_ismanager(from.ismanager());
  }
}

void EditUserInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.EditUserInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditUserInfoRequest::CopyFrom(const EditUserInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.EditUserInfoRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EditUserInfoRequest::IsInitialized() const {

  return true;
}

void EditUserInfoRequest::Swap(EditUserInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditUserInfoRequest::InternalSwap(EditUserInfoRequest* other) {
  std::swap(uid_, other->uid_);
  headimg_.Swap(&other->headimg_);
  realname_.Swap(&other->realname_);
  std::swap(sex_, other->sex_);
  std::swap(age_, other->age_);
  phonenumber_.Swap(&other->phonenumber_);
  location_.Swap(&other->location_);
  std::swap(ismanager_, other->ismanager_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EditUserInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EditUserInfoRequest_descriptor_;
  metadata.reflection = EditUserInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EditUserInfoRequest

// optional int32 uid = 1;
void EditUserInfoRequest::clear_uid() {
  uid_ = 0;
}
::google::protobuf::int32 EditUserInfoRequest::uid() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.uid)
  return uid_;
}
void EditUserInfoRequest::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.uid)
}

// optional string headimg = 2;
void EditUserInfoRequest::clear_headimg() {
  headimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EditUserInfoRequest::headimg() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.headimg)
  return headimg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_headimg(const ::std::string& value) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.headimg)
}
void EditUserInfoRequest::set_headimg(const char* value) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.headimg)
}
void EditUserInfoRequest::set_headimg(const char* value, size_t size) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.headimg)
}
::std::string* EditUserInfoRequest::mutable_headimg() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.headimg)
  return headimg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditUserInfoRequest::release_headimg() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.headimg)
  
  return headimg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_allocated_headimg(::std::string* headimg) {
  if (headimg != NULL) {
    
  } else {
    
  }
  headimg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimg);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.headimg)
}

// optional string realName = 3;
void EditUserInfoRequest::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EditUserInfoRequest::realname() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.realName)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_realname(const ::std::string& value) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.realName)
}
void EditUserInfoRequest::set_realname(const char* value) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.realName)
}
void EditUserInfoRequest::set_realname(const char* value, size_t size) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.realName)
}
::std::string* EditUserInfoRequest::mutable_realname() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.realName)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditUserInfoRequest::release_realname() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.realName)
  
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    
  } else {
    
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.realName)
}

// optional bool sex = 4;
void EditUserInfoRequest::clear_sex() {
  sex_ = false;
}
bool EditUserInfoRequest::sex() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.sex)
  return sex_;
}
void EditUserInfoRequest::set_sex(bool value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.sex)
}

// optional int32 age = 5;
void EditUserInfoRequest::clear_age() {
  age_ = 0;
}
::google::protobuf::int32 EditUserInfoRequest::age() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.age)
  return age_;
}
void EditUserInfoRequest::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.age)
}

// optional string phoneNumber = 6;
void EditUserInfoRequest::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EditUserInfoRequest::phonenumber() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.phoneNumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_phonenumber(const ::std::string& value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.phoneNumber)
}
void EditUserInfoRequest::set_phonenumber(const char* value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.phoneNumber)
}
void EditUserInfoRequest::set_phonenumber(const char* value, size_t size) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.phoneNumber)
}
::std::string* EditUserInfoRequest::mutable_phonenumber() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.phoneNumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditUserInfoRequest::release_phonenumber() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.phoneNumber)
  
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    
  } else {
    
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.phoneNumber)
}

// optional string location = 7;
void EditUserInfoRequest::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EditUserInfoRequest::location() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.location)
}
void EditUserInfoRequest::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.location)
}
void EditUserInfoRequest::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.location)
}
::std::string* EditUserInfoRequest::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EditUserInfoRequest::release_location() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EditUserInfoRequest::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.location)
}

// optional bool isManager = 8;
void EditUserInfoRequest::clear_ismanager() {
  ismanager_ = false;
}
bool EditUserInfoRequest::ismanager() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.isManager)
  return ismanager_;
}
void EditUserInfoRequest::set_ismanager(bool value) {
  
  ismanager_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.isManager)
}

inline const EditUserInfoRequest* EditUserInfoRequest::internal_default_instance() {
  return &EditUserInfoRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EditUserInfoResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EditUserInfoResponse::EditUserInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_farmshop_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:farmshop.EditUserInfoResponse)
}

void EditUserInfoResponse::InitAsDefaultInstance() {
}

EditUserInfoResponse::EditUserInfoResponse(const EditUserInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:farmshop.EditUserInfoResponse)
}

void EditUserInfoResponse::SharedCtor() {
  result_ = 0;
  _cached_size_ = 0;
}

EditUserInfoResponse::~EditUserInfoResponse() {
  // @@protoc_insertion_point(destructor:farmshop.EditUserInfoResponse)
  SharedDtor();
}

void EditUserInfoResponse::SharedDtor() {
}

void EditUserInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EditUserInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EditUserInfoResponse_descriptor_;
}

const EditUserInfoResponse& EditUserInfoResponse::default_instance() {
  protobuf_InitDefaults_farmshop_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EditUserInfoResponse> EditUserInfoResponse_default_instance_;

EditUserInfoResponse* EditUserInfoResponse::New(::google::protobuf::Arena* arena) const {
  EditUserInfoResponse* n = new EditUserInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EditUserInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:farmshop.EditUserInfoResponse)
  result_ = 0;
}

bool EditUserInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:farmshop.EditUserInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 result = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:farmshop.EditUserInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:farmshop.EditUserInfoResponse)
  return false;
#undef DO_
}

void EditUserInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:farmshop.EditUserInfoResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->result(), output);
  }

  // @@protoc_insertion_point(serialize_end:farmshop.EditUserInfoResponse)
}

::google::protobuf::uint8* EditUserInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:farmshop.EditUserInfoResponse)
  // optional int32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->result(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:farmshop.EditUserInfoResponse)
  return target;
}

size_t EditUserInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:farmshop.EditUserInfoResponse)
  size_t total_size = 0;

  // optional int32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EditUserInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:farmshop.EditUserInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EditUserInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EditUserInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:farmshop.EditUserInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:farmshop.EditUserInfoResponse)
    UnsafeMergeFrom(*source);
  }
}

void EditUserInfoResponse::MergeFrom(const EditUserInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:farmshop.EditUserInfoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EditUserInfoResponse::UnsafeMergeFrom(const EditUserInfoResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void EditUserInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:farmshop.EditUserInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EditUserInfoResponse::CopyFrom(const EditUserInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:farmshop.EditUserInfoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EditUserInfoResponse::IsInitialized() const {

  return true;
}

void EditUserInfoResponse::Swap(EditUserInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EditUserInfoResponse::InternalSwap(EditUserInfoResponse* other) {
  std::swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EditUserInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EditUserInfoResponse_descriptor_;
  metadata.reflection = EditUserInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EditUserInfoResponse

// optional int32 result = 1;
void EditUserInfoResponse::clear_result() {
  result_ = 0;
}
::google::protobuf::int32 EditUserInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoResponse.result)
  return result_;
}
void EditUserInfoResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoResponse.result)
}

inline const EditUserInfoResponse* EditUserInfoResponse::internal_default_instance() {
  return &EditUserInfoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace farmshop

// @@protoc_insertion_point(global_scope)
