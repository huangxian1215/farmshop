// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: farmshop.proto

#ifndef PROTOBUF_farmshop_2eproto__INCLUDED
#define PROTOBUF_farmshop_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
// @@protoc_insertion_point(includes)

namespace farmshop {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_farmshop_2eproto();
void protobuf_InitDefaults_farmshop_2eproto();
void protobuf_AssignDesc_farmshop_2eproto();
void protobuf_ShutdownFile_farmshop_2eproto();

class BuyOneInfo;
class ClientSession;
class DeleteOrderRequest;
class DeleteOrderResponse;
class EditUserInfoRequest;
class EditUserInfoResponse;
class LoginRequest;
class LoginResponse;
class Order;
class QueryOrderRequest;
class QueryOrderResponse;
class ReceiveOrderEvent;
class RegistRequest;
class RegistResponse;
class SendMessageRequest;
class SendMessageResponse;
class UpOrderRequest;
class UpOrderResponse;
class baseType;

enum MsgId {
  CONNECT_REQ = 0,
  CONNECT_RES = 1,
  REGIST_REQ = 2,
  REGIST_RES = 3,
  LOGIN_REQ = 4,
  LOGIN_RES = 5,
  EditUserInfo_REQ = 6,
  EditUserInfo_RES = 7,
  SEND_MESSAGE_REQ = 8,
  SEND_MESSAGE_RES = 9,
  UPORDER_REQ = 10,
  UPORDER_RES = 11,
  QUERYORDER_REQ = 12,
  QUERYORDER_RES = 13,
  DELETEORDER_REQ = 14,
  DELETEORDER_RES = 15,
  RECEIVEORDER_EVENT = 16,
  MsgId_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgId_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgId_IsValid(int value);
const MsgId MsgId_MIN = CONNECT_REQ;
const MsgId MsgId_MAX = RECEIVEORDER_EVENT;
const int MsgId_ARRAYSIZE = MsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgId_descriptor();
inline const ::std::string& MsgId_Name(MsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgId_descriptor(), value);
}
inline bool MsgId_Parse(
    const ::std::string& name, MsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgId>(
    MsgId_descriptor(), name, value);
}
enum OrderState {
  ORDER_NOTRECIEVE = 0,
  ORDER_CANCEL = 1,
  ORDER_RECIEVE = 2,
  ORDER_NOSTOCK = 3,
  ORDER_FINISH = 4,
  OrderState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OrderState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OrderState_IsValid(int value);
const OrderState OrderState_MIN = ORDER_NOTRECIEVE;
const OrderState OrderState_MAX = ORDER_FINISH;
const int OrderState_ARRAYSIZE = OrderState_MAX + 1;

const ::google::protobuf::EnumDescriptor* OrderState_descriptor();
inline const ::std::string& OrderState_Name(OrderState value) {
  return ::google::protobuf::internal::NameOfEnum(
    OrderState_descriptor(), value);
}
inline bool OrderState_Parse(
    const ::std::string& name, OrderState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OrderState>(
    OrderState_descriptor(), name, value);
}
// ===================================================================

class ClientSession : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.ClientSession) */ {
 public:
  ClientSession();
  virtual ~ClientSession();

  ClientSession(const ClientSession& from);

  inline ClientSession& operator=(const ClientSession& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientSession& default_instance();

  static const ClientSession* internal_default_instance();

  void Swap(ClientSession* other);

  // implements Message ----------------------------------------------

  inline ClientSession* New() const { return New(NULL); }

  ClientSession* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientSession& from);
  void MergeFrom(const ClientSession& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientSession* other);
  void UnsafeMergeFrom(const ClientSession& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 sessionId = 1;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 1;
  ::google::protobuf::int32 sessionid() const;
  void set_sessionid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.ClientSession)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sessionid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientSession> ClientSession_default_instance_;

// -------------------------------------------------------------------

class baseType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.baseType) */ {
 public:
  baseType();
  virtual ~baseType();

  baseType(const baseType& from);

  inline baseType& operator=(const baseType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const baseType& default_instance();

  static const baseType* internal_default_instance();

  void Swap(baseType* other);

  // implements Message ----------------------------------------------

  inline baseType* New() const { return New(NULL); }

  baseType* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const baseType& from);
  void MergeFrom(const baseType& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(baseType* other);
  void UnsafeMergeFrom(const baseType& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .farmshop.MsgId type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::farmshop::MsgId type() const;
  void set_type(::farmshop::MsgId value);

  // optional string sessionId = 2;
  void clear_sessionid();
  static const int kSessionIdFieldNumber = 2;
  const ::std::string& sessionid() const;
  void set_sessionid(const ::std::string& value);
  void set_sessionid(const char* value);
  void set_sessionid(const char* value, size_t size);
  ::std::string* mutable_sessionid();
  ::std::string* release_sessionid();
  void set_allocated_sessionid(::std::string* sessionid);

  // repeated .google.protobuf.Any object = 3;
  int object_size() const;
  void clear_object();
  static const int kObjectFieldNumber = 3;
  const ::google::protobuf::Any& object(int index) const;
  ::google::protobuf::Any* mutable_object(int index);
  ::google::protobuf::Any* add_object();
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_object();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      object() const;

  // @@protoc_insertion_point(class_scope:farmshop.baseType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > object_;
  ::google::protobuf::internal::ArenaStringPtr sessionid_;
  int type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<baseType> baseType_default_instance_;

// -------------------------------------------------------------------

class RegistRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.RegistRequest) */ {
 public:
  RegistRequest();
  virtual ~RegistRequest();

  RegistRequest(const RegistRequest& from);

  inline RegistRequest& operator=(const RegistRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegistRequest& default_instance();

  static const RegistRequest* internal_default_instance();

  void Swap(RegistRequest* other);

  // implements Message ----------------------------------------------

  inline RegistRequest* New() const { return New(NULL); }

  RegistRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegistRequest& from);
  void MergeFrom(const RegistRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegistRequest* other);
  void UnsafeMergeFrom(const RegistRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:farmshop.RegistRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegistRequest> RegistRequest_default_instance_;

// -------------------------------------------------------------------

class RegistResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.RegistResponse) */ {
 public:
  RegistResponse();
  virtual ~RegistResponse();

  RegistResponse(const RegistResponse& from);

  inline RegistResponse& operator=(const RegistResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegistResponse& default_instance();

  static const RegistResponse* internal_default_instance();

  void Swap(RegistResponse* other);

  // implements Message ----------------------------------------------

  inline RegistResponse* New() const { return New(NULL); }

  RegistResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegistResponse& from);
  void MergeFrom(const RegistResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RegistResponse* other);
  void UnsafeMergeFrom(const RegistResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.RegistResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RegistResponse> RegistResponse_default_instance_;

// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static const LoginRequest* internal_default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequest* other);
  void UnsafeMergeFrom(const LoginRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> LoginRequest_default_instance_;

// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static const LoginResponse* internal_default_instance();

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResponse* other);
  void UnsafeMergeFrom(const LoginResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .farmshop.EditUserInfoRequest userinfo = 3;
  bool has_userinfo() const;
  void clear_userinfo();
  static const int kUserinfoFieldNumber = 3;
  const ::farmshop::EditUserInfoRequest& userinfo() const;
  ::farmshop::EditUserInfoRequest* mutable_userinfo();
  ::farmshop::EditUserInfoRequest* release_userinfo();
  void set_allocated_userinfo(::farmshop::EditUserInfoRequest* userinfo);

  // @@protoc_insertion_point(class_scope:farmshop.LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::farmshop::EditUserInfoRequest* userinfo_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> LoginResponse_default_instance_;

// -------------------------------------------------------------------

class EditUserInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.EditUserInfoRequest) */ {
 public:
  EditUserInfoRequest();
  virtual ~EditUserInfoRequest();

  EditUserInfoRequest(const EditUserInfoRequest& from);

  inline EditUserInfoRequest& operator=(const EditUserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditUserInfoRequest& default_instance();

  static const EditUserInfoRequest* internal_default_instance();

  void Swap(EditUserInfoRequest* other);

  // implements Message ----------------------------------------------

  inline EditUserInfoRequest* New() const { return New(NULL); }

  EditUserInfoRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditUserInfoRequest& from);
  void MergeFrom(const EditUserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditUserInfoRequest* other);
  void UnsafeMergeFrom(const EditUserInfoRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional string headimg = 2;
  void clear_headimg();
  static const int kHeadimgFieldNumber = 2;
  const ::std::string& headimg() const;
  void set_headimg(const ::std::string& value);
  void set_headimg(const char* value);
  void set_headimg(const char* value, size_t size);
  ::std::string* mutable_headimg();
  ::std::string* release_headimg();
  void set_allocated_headimg(::std::string* headimg);

  // optional string realName = 3;
  void clear_realname();
  static const int kRealNameFieldNumber = 3;
  const ::std::string& realname() const;
  void set_realname(const ::std::string& value);
  void set_realname(const char* value);
  void set_realname(const char* value, size_t size);
  ::std::string* mutable_realname();
  ::std::string* release_realname();
  void set_allocated_realname(::std::string* realname);

  // optional bool sex = 4;
  void clear_sex();
  static const int kSexFieldNumber = 4;
  bool sex() const;
  void set_sex(bool value);

  // optional int32 age = 5;
  void clear_age();
  static const int kAgeFieldNumber = 5;
  ::google::protobuf::int32 age() const;
  void set_age(::google::protobuf::int32 value);

  // optional string phoneNumber = 6;
  void clear_phonenumber();
  static const int kPhoneNumberFieldNumber = 6;
  const ::std::string& phonenumber() const;
  void set_phonenumber(const ::std::string& value);
  void set_phonenumber(const char* value);
  void set_phonenumber(const char* value, size_t size);
  ::std::string* mutable_phonenumber();
  ::std::string* release_phonenumber();
  void set_allocated_phonenumber(::std::string* phonenumber);

  // optional string location = 7;
  void clear_location();
  static const int kLocationFieldNumber = 7;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // optional bool isManager = 8;
  void clear_ismanager();
  static const int kIsManagerFieldNumber = 8;
  bool ismanager() const;
  void set_ismanager(bool value);

  // optional string petName = 9;
  void clear_petname();
  static const int kPetNameFieldNumber = 9;
  const ::std::string& petname() const;
  void set_petname(const ::std::string& value);
  void set_petname(const char* value);
  void set_petname(const char* value, size_t size);
  ::std::string* mutable_petname();
  ::std::string* release_petname();
  void set_allocated_petname(::std::string* petname);

  // @@protoc_insertion_point(class_scope:farmshop.EditUserInfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr headimg_;
  ::google::protobuf::internal::ArenaStringPtr realname_;
  ::google::protobuf::internal::ArenaStringPtr phonenumber_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::internal::ArenaStringPtr petname_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 age_;
  bool sex_;
  bool ismanager_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EditUserInfoRequest> EditUserInfoRequest_default_instance_;

// -------------------------------------------------------------------

class EditUserInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.EditUserInfoResponse) */ {
 public:
  EditUserInfoResponse();
  virtual ~EditUserInfoResponse();

  EditUserInfoResponse(const EditUserInfoResponse& from);

  inline EditUserInfoResponse& operator=(const EditUserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditUserInfoResponse& default_instance();

  static const EditUserInfoResponse* internal_default_instance();

  void Swap(EditUserInfoResponse* other);

  // implements Message ----------------------------------------------

  inline EditUserInfoResponse* New() const { return New(NULL); }

  EditUserInfoResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditUserInfoResponse& from);
  void MergeFrom(const EditUserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EditUserInfoResponse* other);
  void UnsafeMergeFrom(const EditUserInfoResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.EditUserInfoResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<EditUserInfoResponse> EditUserInfoResponse_default_instance_;

// -------------------------------------------------------------------

class SendMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.SendMessageRequest) */ {
 public:
  SendMessageRequest();
  virtual ~SendMessageRequest();

  SendMessageRequest(const SendMessageRequest& from);

  inline SendMessageRequest& operator=(const SendMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMessageRequest& default_instance();

  static const SendMessageRequest* internal_default_instance();

  void Swap(SendMessageRequest* other);

  // implements Message ----------------------------------------------

  inline SendMessageRequest* New() const { return New(NULL); }

  SendMessageRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMessageRequest& from);
  void MergeFrom(const SendMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMessageRequest* other);
  void UnsafeMergeFrom(const SendMessageRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string words = 1;
  void clear_words();
  static const int kWordsFieldNumber = 1;
  const ::std::string& words() const;
  void set_words(const ::std::string& value);
  void set_words(const char* value);
  void set_words(const char* value, size_t size);
  ::std::string* mutable_words();
  ::std::string* release_words();
  void set_allocated_words(::std::string* words);

  // optional string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:farmshop.SendMessageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr words_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendMessageRequest> SendMessageRequest_default_instance_;

// -------------------------------------------------------------------

class SendMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.SendMessageResponse) */ {
 public:
  SendMessageResponse();
  virtual ~SendMessageResponse();

  SendMessageResponse(const SendMessageResponse& from);

  inline SendMessageResponse& operator=(const SendMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMessageResponse& default_instance();

  static const SendMessageResponse* internal_default_instance();

  void Swap(SendMessageResponse* other);

  // implements Message ----------------------------------------------

  inline SendMessageResponse* New() const { return New(NULL); }

  SendMessageResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendMessageResponse& from);
  void MergeFrom(const SendMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendMessageResponse* other);
  void UnsafeMergeFrom(const SendMessageResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // optional string words = 2;
  void clear_words();
  static const int kWordsFieldNumber = 2;
  const ::std::string& words() const;
  void set_words(const ::std::string& value);
  void set_words(const char* value);
  void set_words(const char* value, size_t size);
  ::std::string* mutable_words();
  ::std::string* release_words();
  void set_allocated_words(::std::string* words);

  // optional string name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:farmshop.SendMessageResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr words_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendMessageResponse> SendMessageResponse_default_instance_;

// -------------------------------------------------------------------

class UpOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.UpOrderRequest) */ {
 public:
  UpOrderRequest();
  virtual ~UpOrderRequest();

  UpOrderRequest(const UpOrderRequest& from);

  inline UpOrderRequest& operator=(const UpOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpOrderRequest& default_instance();

  static const UpOrderRequest* internal_default_instance();

  void Swap(UpOrderRequest* other);

  // implements Message ----------------------------------------------

  inline UpOrderRequest* New() const { return New(NULL); }

  UpOrderRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpOrderRequest& from);
  void MergeFrom(const UpOrderRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpOrderRequest* other);
  void UnsafeMergeFrom(const UpOrderRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // repeated .farmshop.BuyOneInfo buyList = 2;
  int buylist_size() const;
  void clear_buylist();
  static const int kBuyListFieldNumber = 2;
  const ::farmshop::BuyOneInfo& buylist(int index) const;
  ::farmshop::BuyOneInfo* mutable_buylist(int index);
  ::farmshop::BuyOneInfo* add_buylist();
  ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >*
      mutable_buylist();
  const ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >&
      buylist() const;

  // optional int64 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int32 amount = 4;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // optional string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:farmshop.UpOrderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo > buylist_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int64 time_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpOrderRequest> UpOrderRequest_default_instance_;

// -------------------------------------------------------------------

class BuyOneInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.BuyOneInfo) */ {
 public:
  BuyOneInfo();
  virtual ~BuyOneInfo();

  BuyOneInfo(const BuyOneInfo& from);

  inline BuyOneInfo& operator=(const BuyOneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BuyOneInfo& default_instance();

  static const BuyOneInfo* internal_default_instance();

  void Swap(BuyOneInfo* other);

  // implements Message ----------------------------------------------

  inline BuyOneInfo* New() const { return New(NULL); }

  BuyOneInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BuyOneInfo& from);
  void MergeFrom(const BuyOneInfo& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BuyOneInfo* other);
  void UnsafeMergeFrom(const BuyOneInfo& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 weight = 2;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  ::google::protobuf::int32 weight() const;
  void set_weight(::google::protobuf::int32 value);

  // optional int32 price = 3;
  void clear_price();
  static const int kPriceFieldNumber = 3;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.BuyOneInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 weight_;
  ::google::protobuf::int32 price_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BuyOneInfo> BuyOneInfo_default_instance_;

// -------------------------------------------------------------------

class UpOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.UpOrderResponse) */ {
 public:
  UpOrderResponse();
  virtual ~UpOrderResponse();

  UpOrderResponse(const UpOrderResponse& from);

  inline UpOrderResponse& operator=(const UpOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpOrderResponse& default_instance();

  static const UpOrderResponse* internal_default_instance();

  void Swap(UpOrderResponse* other);

  // implements Message ----------------------------------------------

  inline UpOrderResponse* New() const { return New(NULL); }

  UpOrderResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpOrderResponse& from);
  void MergeFrom(const UpOrderResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpOrderResponse* other);
  void UnsafeMergeFrom(const UpOrderResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.UpOrderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpOrderResponse> UpOrderResponse_default_instance_;

// -------------------------------------------------------------------

class ReceiveOrderEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.ReceiveOrderEvent) */ {
 public:
  ReceiveOrderEvent();
  virtual ~ReceiveOrderEvent();

  ReceiveOrderEvent(const ReceiveOrderEvent& from);

  inline ReceiveOrderEvent& operator=(const ReceiveOrderEvent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReceiveOrderEvent& default_instance();

  static const ReceiveOrderEvent* internal_default_instance();

  void Swap(ReceiveOrderEvent* other);

  // implements Message ----------------------------------------------

  inline ReceiveOrderEvent* New() const { return New(NULL); }

  ReceiveOrderEvent* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReceiveOrderEvent& from);
  void MergeFrom(const ReceiveOrderEvent& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ReceiveOrderEvent* other);
  void UnsafeMergeFrom(const ReceiveOrderEvent& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional .farmshop.OrderState state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::farmshop::OrderState state() const;
  void set_state(::farmshop::OrderState value);

  // @@protoc_insertion_point(class_scope:farmshop.ReceiveOrderEvent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  int state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ReceiveOrderEvent> ReceiveOrderEvent_default_instance_;

// -------------------------------------------------------------------

class QueryOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.QueryOrderRequest) */ {
 public:
  QueryOrderRequest();
  virtual ~QueryOrderRequest();

  QueryOrderRequest(const QueryOrderRequest& from);

  inline QueryOrderRequest& operator=(const QueryOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOrderRequest& default_instance();

  static const QueryOrderRequest* internal_default_instance();

  void Swap(QueryOrderRequest* other);

  // implements Message ----------------------------------------------

  inline QueryOrderRequest* New() const { return New(NULL); }

  QueryOrderRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOrderRequest& from);
  void MergeFrom(const QueryOrderRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryOrderRequest* other);
  void UnsafeMergeFrom(const QueryOrderRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 lastTime = 1;
  void clear_lasttime();
  static const int kLastTimeFieldNumber = 1;
  ::google::protobuf::int64 lasttime() const;
  void set_lasttime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:farmshop.QueryOrderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 lasttime_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryOrderRequest> QueryOrderRequest_default_instance_;

// -------------------------------------------------------------------

class QueryOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.QueryOrderResponse) */ {
 public:
  QueryOrderResponse();
  virtual ~QueryOrderResponse();

  QueryOrderResponse(const QueryOrderResponse& from);

  inline QueryOrderResponse& operator=(const QueryOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryOrderResponse& default_instance();

  static const QueryOrderResponse* internal_default_instance();

  void Swap(QueryOrderResponse* other);

  // implements Message ----------------------------------------------

  inline QueryOrderResponse* New() const { return New(NULL); }

  QueryOrderResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QueryOrderResponse& from);
  void MergeFrom(const QueryOrderResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QueryOrderResponse* other);
  void UnsafeMergeFrom(const QueryOrderResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // repeated .farmshop.Order orders = 2;
  int orders_size() const;
  void clear_orders();
  static const int kOrdersFieldNumber = 2;
  const ::farmshop::Order& orders(int index) const;
  ::farmshop::Order* mutable_orders(int index);
  ::farmshop::Order* add_orders();
  ::google::protobuf::RepeatedPtrField< ::farmshop::Order >*
      mutable_orders();
  const ::google::protobuf::RepeatedPtrField< ::farmshop::Order >&
      orders() const;

  // @@protoc_insertion_point(class_scope:farmshop.QueryOrderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::farmshop::Order > orders_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QueryOrderResponse> QueryOrderResponse_default_instance_;

// -------------------------------------------------------------------

class Order : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.Order) */ {
 public:
  Order();
  virtual ~Order();

  Order(const Order& from);

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Order& default_instance();

  static const Order* internal_default_instance();

  void Swap(Order* other);

  // implements Message ----------------------------------------------

  inline Order* New() const { return New(NULL); }

  Order* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Order& from);
  void MergeFrom(const Order& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Order* other);
  void UnsafeMergeFrom(const Order& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // optional int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int64 time = 3;
  void clear_time();
  static const int kTimeFieldNumber = 3;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int32 amount = 4;
  void clear_amount();
  static const int kAmountFieldNumber = 4;
  ::google::protobuf::int32 amount() const;
  void set_amount(::google::protobuf::int32 value);

  // optional string message = 5;
  void clear_message();
  static const int kMessageFieldNumber = 5;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // repeated .farmshop.BuyOneInfo list = 6;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 6;
  const ::farmshop::BuyOneInfo& list(int index) const;
  ::farmshop::BuyOneInfo* mutable_list(int index);
  ::farmshop::BuyOneInfo* add_list();
  ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >&
      list() const;

  // optional int32 state = 7;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.Order)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo > list_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 amount_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<Order> Order_default_instance_;

// -------------------------------------------------------------------

class DeleteOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.DeleteOrderRequest) */ {
 public:
  DeleteOrderRequest();
  virtual ~DeleteOrderRequest();

  DeleteOrderRequest(const DeleteOrderRequest& from);

  inline DeleteOrderRequest& operator=(const DeleteOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteOrderRequest& default_instance();

  static const DeleteOrderRequest* internal_default_instance();

  void Swap(DeleteOrderRequest* other);

  // implements Message ----------------------------------------------

  inline DeleteOrderRequest* New() const { return New(NULL); }

  DeleteOrderRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteOrderRequest& from);
  void MergeFrom(const DeleteOrderRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteOrderRequest* other);
  void UnsafeMergeFrom(const DeleteOrderRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.DeleteOrderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteOrderRequest> DeleteOrderRequest_default_instance_;

// -------------------------------------------------------------------

class DeleteOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:farmshop.DeleteOrderResponse) */ {
 public:
  DeleteOrderResponse();
  virtual ~DeleteOrderResponse();

  DeleteOrderResponse(const DeleteOrderResponse& from);

  inline DeleteOrderResponse& operator=(const DeleteOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteOrderResponse& default_instance();

  static const DeleteOrderResponse* internal_default_instance();

  void Swap(DeleteOrderResponse* other);

  // implements Message ----------------------------------------------

  inline DeleteOrderResponse* New() const { return New(NULL); }

  DeleteOrderResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeleteOrderResponse& from);
  void MergeFrom(const DeleteOrderResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DeleteOrderResponse* other);
  void UnsafeMergeFrom(const DeleteOrderResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::int32 result() const;
  void set_result(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:farmshop.DeleteOrderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 result_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_farmshop_2eproto_impl();
  friend void  protobuf_AddDesc_farmshop_2eproto_impl();
  friend void protobuf_AssignDesc_farmshop_2eproto();
  friend void protobuf_ShutdownFile_farmshop_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<DeleteOrderResponse> DeleteOrderResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientSession

// optional int32 sessionId = 1;
inline void ClientSession::clear_sessionid() {
  sessionid_ = 0;
}
inline ::google::protobuf::int32 ClientSession::sessionid() const {
  // @@protoc_insertion_point(field_get:farmshop.ClientSession.sessionId)
  return sessionid_;
}
inline void ClientSession::set_sessionid(::google::protobuf::int32 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:farmshop.ClientSession.sessionId)
}

inline const ClientSession* ClientSession::internal_default_instance() {
  return &ClientSession_default_instance_.get();
}
// -------------------------------------------------------------------

// baseType

// optional .farmshop.MsgId type = 1;
inline void baseType::clear_type() {
  type_ = 0;
}
inline ::farmshop::MsgId baseType::type() const {
  // @@protoc_insertion_point(field_get:farmshop.baseType.type)
  return static_cast< ::farmshop::MsgId >(type_);
}
inline void baseType::set_type(::farmshop::MsgId value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:farmshop.baseType.type)
}

// optional string sessionId = 2;
inline void baseType::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& baseType::sessionid() const {
  // @@protoc_insertion_point(field_get:farmshop.baseType.sessionId)
  return sessionid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void baseType::set_sessionid(const ::std::string& value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.baseType.sessionId)
}
inline void baseType::set_sessionid(const char* value) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.baseType.sessionId)
}
inline void baseType::set_sessionid(const char* value, size_t size) {
  
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.baseType.sessionId)
}
inline ::std::string* baseType::mutable_sessionid() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.baseType.sessionId)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* baseType::release_sessionid() {
  // @@protoc_insertion_point(field_release:farmshop.baseType.sessionId)
  
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void baseType::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    
  } else {
    
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:farmshop.baseType.sessionId)
}

// repeated .google.protobuf.Any object = 3;
inline int baseType::object_size() const {
  return object_.size();
}
inline void baseType::clear_object() {
  object_.Clear();
}
inline const ::google::protobuf::Any& baseType::object(int index) const {
  // @@protoc_insertion_point(field_get:farmshop.baseType.object)
  return object_.Get(index);
}
inline ::google::protobuf::Any* baseType::mutable_object(int index) {
  // @@protoc_insertion_point(field_mutable:farmshop.baseType.object)
  return object_.Mutable(index);
}
inline ::google::protobuf::Any* baseType::add_object() {
  // @@protoc_insertion_point(field_add:farmshop.baseType.object)
  return object_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
baseType::mutable_object() {
  // @@protoc_insertion_point(field_mutable_list:farmshop.baseType.object)
  return &object_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
baseType::object() const {
  // @@protoc_insertion_point(field_list:farmshop.baseType.object)
  return object_;
}

inline const baseType* baseType::internal_default_instance() {
  return &baseType_default_instance_.get();
}
// -------------------------------------------------------------------

// RegistRequest

// optional string name = 1;
inline void RegistRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegistRequest::name() const {
  // @@protoc_insertion_point(field_get:farmshop.RegistRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegistRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.RegistRequest.name)
}
inline void RegistRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.RegistRequest.name)
}
inline void RegistRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.RegistRequest.name)
}
inline ::std::string* RegistRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.RegistRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegistRequest::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.RegistRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegistRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.RegistRequest.name)
}

// optional string password = 2;
inline void RegistRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegistRequest::password() const {
  // @@protoc_insertion_point(field_get:farmshop.RegistRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegistRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.RegistRequest.password)
}
inline void RegistRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.RegistRequest.password)
}
inline void RegistRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.RegistRequest.password)
}
inline ::std::string* RegistRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.RegistRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegistRequest::release_password() {
  // @@protoc_insertion_point(field_release:farmshop.RegistRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegistRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:farmshop.RegistRequest.password)
}

inline const RegistRequest* RegistRequest::internal_default_instance() {
  return &RegistRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// RegistResponse

// optional int32 result = 1;
inline void RegistResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 RegistResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.RegistResponse.result)
  return result_;
}
inline void RegistResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.RegistResponse.result)
}

inline const RegistResponse* RegistResponse::internal_default_instance() {
  return &RegistResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginRequest

// optional string name = 1;
inline void LoginRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::name() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.LoginRequest.name)
}
inline void LoginRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.LoginRequest.name)
}
inline void LoginRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.LoginRequest.name)
}
inline ::std::string* LoginRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.LoginRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.LoginRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginRequest.name)
}

// optional string password = 2;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:farmshop.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginRequest.password)
}

// optional int32 type = 3;
inline void LoginRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::type() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginRequest.type)
  return type_;
}
inline void LoginRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:farmshop.LoginRequest.type)
}

inline const LoginRequest* LoginRequest::internal_default_instance() {
  return &LoginRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginResponse

// optional int32 result = 1;
inline void LoginResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 LoginResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginResponse.result)
  return result_;
}
inline void LoginResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.LoginResponse.result)
}

// optional string name = 2;
inline void LoginResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::name() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.LoginResponse.name)
}
inline void LoginResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.LoginResponse.name)
}
inline void LoginResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.LoginResponse.name)
}
inline ::std::string* LoginResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.LoginResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.LoginResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginResponse.name)
}

// optional .farmshop.EditUserInfoRequest userinfo = 3;
inline bool LoginResponse::has_userinfo() const {
  return this != internal_default_instance() && userinfo_ != NULL;
}
inline void LoginResponse::clear_userinfo() {
  if (GetArenaNoVirtual() == NULL && userinfo_ != NULL) delete userinfo_;
  userinfo_ = NULL;
}
inline const ::farmshop::EditUserInfoRequest& LoginResponse::userinfo() const {
  // @@protoc_insertion_point(field_get:farmshop.LoginResponse.userinfo)
  return userinfo_ != NULL ? *userinfo_
                         : *::farmshop::EditUserInfoRequest::internal_default_instance();
}
inline ::farmshop::EditUserInfoRequest* LoginResponse::mutable_userinfo() {
  
  if (userinfo_ == NULL) {
    userinfo_ = new ::farmshop::EditUserInfoRequest;
  }
  // @@protoc_insertion_point(field_mutable:farmshop.LoginResponse.userinfo)
  return userinfo_;
}
inline ::farmshop::EditUserInfoRequest* LoginResponse::release_userinfo() {
  // @@protoc_insertion_point(field_release:farmshop.LoginResponse.userinfo)
  
  ::farmshop::EditUserInfoRequest* temp = userinfo_;
  userinfo_ = NULL;
  return temp;
}
inline void LoginResponse::set_allocated_userinfo(::farmshop::EditUserInfoRequest* userinfo) {
  delete userinfo_;
  userinfo_ = userinfo;
  if (userinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:farmshop.LoginResponse.userinfo)
}

inline const LoginResponse* LoginResponse::internal_default_instance() {
  return &LoginResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// EditUserInfoRequest

// optional int32 uid = 1;
inline void EditUserInfoRequest::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 EditUserInfoRequest::uid() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.uid)
  return uid_;
}
inline void EditUserInfoRequest::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.uid)
}

// optional string headimg = 2;
inline void EditUserInfoRequest::clear_headimg() {
  headimg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditUserInfoRequest::headimg() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.headimg)
  return headimg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_headimg(const ::std::string& value) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.headimg)
}
inline void EditUserInfoRequest::set_headimg(const char* value) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.headimg)
}
inline void EditUserInfoRequest::set_headimg(const char* value, size_t size) {
  
  headimg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.headimg)
}
inline ::std::string* EditUserInfoRequest::mutable_headimg() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.headimg)
  return headimg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditUserInfoRequest::release_headimg() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.headimg)
  
  return headimg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_allocated_headimg(::std::string* headimg) {
  if (headimg != NULL) {
    
  } else {
    
  }
  headimg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimg);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.headimg)
}

// optional string realName = 3;
inline void EditUserInfoRequest::clear_realname() {
  realname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditUserInfoRequest::realname() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.realName)
  return realname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_realname(const ::std::string& value) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.realName)
}
inline void EditUserInfoRequest::set_realname(const char* value) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.realName)
}
inline void EditUserInfoRequest::set_realname(const char* value, size_t size) {
  
  realname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.realName)
}
inline ::std::string* EditUserInfoRequest::mutable_realname() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.realName)
  return realname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditUserInfoRequest::release_realname() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.realName)
  
  return realname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_allocated_realname(::std::string* realname) {
  if (realname != NULL) {
    
  } else {
    
  }
  realname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realname);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.realName)
}

// optional bool sex = 4;
inline void EditUserInfoRequest::clear_sex() {
  sex_ = false;
}
inline bool EditUserInfoRequest::sex() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.sex)
  return sex_;
}
inline void EditUserInfoRequest::set_sex(bool value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.sex)
}

// optional int32 age = 5;
inline void EditUserInfoRequest::clear_age() {
  age_ = 0;
}
inline ::google::protobuf::int32 EditUserInfoRequest::age() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.age)
  return age_;
}
inline void EditUserInfoRequest::set_age(::google::protobuf::int32 value) {
  
  age_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.age)
}

// optional string phoneNumber = 6;
inline void EditUserInfoRequest::clear_phonenumber() {
  phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditUserInfoRequest::phonenumber() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.phoneNumber)
  return phonenumber_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_phonenumber(const ::std::string& value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.phoneNumber)
}
inline void EditUserInfoRequest::set_phonenumber(const char* value) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.phoneNumber)
}
inline void EditUserInfoRequest::set_phonenumber(const char* value, size_t size) {
  
  phonenumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.phoneNumber)
}
inline ::std::string* EditUserInfoRequest::mutable_phonenumber() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.phoneNumber)
  return phonenumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditUserInfoRequest::release_phonenumber() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.phoneNumber)
  
  return phonenumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_allocated_phonenumber(::std::string* phonenumber) {
  if (phonenumber != NULL) {
    
  } else {
    
  }
  phonenumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phonenumber);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.phoneNumber)
}

// optional string location = 7;
inline void EditUserInfoRequest::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditUserInfoRequest::location() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.location)
  return location_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_location(const ::std::string& value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.location)
}
inline void EditUserInfoRequest::set_location(const char* value) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.location)
}
inline void EditUserInfoRequest::set_location(const char* value, size_t size) {
  
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.location)
}
inline ::std::string* EditUserInfoRequest::mutable_location() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditUserInfoRequest::release_location() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.location)
  
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    
  } else {
    
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.location)
}

// optional bool isManager = 8;
inline void EditUserInfoRequest::clear_ismanager() {
  ismanager_ = false;
}
inline bool EditUserInfoRequest::ismanager() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.isManager)
  return ismanager_;
}
inline void EditUserInfoRequest::set_ismanager(bool value) {
  
  ismanager_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.isManager)
}

// optional string petName = 9;
inline void EditUserInfoRequest::clear_petname() {
  petname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EditUserInfoRequest::petname() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoRequest.petName)
  return petname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_petname(const ::std::string& value) {
  
  petname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoRequest.petName)
}
inline void EditUserInfoRequest::set_petname(const char* value) {
  
  petname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.EditUserInfoRequest.petName)
}
inline void EditUserInfoRequest::set_petname(const char* value, size_t size) {
  
  petname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.EditUserInfoRequest.petName)
}
inline ::std::string* EditUserInfoRequest::mutable_petname() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.EditUserInfoRequest.petName)
  return petname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EditUserInfoRequest::release_petname() {
  // @@protoc_insertion_point(field_release:farmshop.EditUserInfoRequest.petName)
  
  return petname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EditUserInfoRequest::set_allocated_petname(::std::string* petname) {
  if (petname != NULL) {
    
  } else {
    
  }
  petname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), petname);
  // @@protoc_insertion_point(field_set_allocated:farmshop.EditUserInfoRequest.petName)
}

inline const EditUserInfoRequest* EditUserInfoRequest::internal_default_instance() {
  return &EditUserInfoRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// EditUserInfoResponse

// optional int32 result = 1;
inline void EditUserInfoResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 EditUserInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.EditUserInfoResponse.result)
  return result_;
}
inline void EditUserInfoResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.EditUserInfoResponse.result)
}

inline const EditUserInfoResponse* EditUserInfoResponse::internal_default_instance() {
  return &EditUserInfoResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// SendMessageRequest

// optional string words = 1;
inline void SendMessageRequest::clear_words() {
  words_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMessageRequest::words() const {
  // @@protoc_insertion_point(field_get:farmshop.SendMessageRequest.words)
  return words_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRequest::set_words(const ::std::string& value) {
  
  words_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.SendMessageRequest.words)
}
inline void SendMessageRequest::set_words(const char* value) {
  
  words_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.SendMessageRequest.words)
}
inline void SendMessageRequest::set_words(const char* value, size_t size) {
  
  words_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.SendMessageRequest.words)
}
inline ::std::string* SendMessageRequest::mutable_words() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.SendMessageRequest.words)
  return words_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageRequest::release_words() {
  // @@protoc_insertion_point(field_release:farmshop.SendMessageRequest.words)
  
  return words_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRequest::set_allocated_words(::std::string* words) {
  if (words != NULL) {
    
  } else {
    
  }
  words_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), words);
  // @@protoc_insertion_point(field_set_allocated:farmshop.SendMessageRequest.words)
}

// optional string name = 2;
inline void SendMessageRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMessageRequest::name() const {
  // @@protoc_insertion_point(field_get:farmshop.SendMessageRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.SendMessageRequest.name)
}
inline void SendMessageRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.SendMessageRequest.name)
}
inline void SendMessageRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.SendMessageRequest.name)
}
inline ::std::string* SendMessageRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.SendMessageRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageRequest::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.SendMessageRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.SendMessageRequest.name)
}

inline const SendMessageRequest* SendMessageRequest::internal_default_instance() {
  return &SendMessageRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SendMessageResponse

// optional int32 result = 1;
inline void SendMessageResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 SendMessageResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.SendMessageResponse.result)
  return result_;
}
inline void SendMessageResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.SendMessageResponse.result)
}

// optional string words = 2;
inline void SendMessageResponse::clear_words() {
  words_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMessageResponse::words() const {
  // @@protoc_insertion_point(field_get:farmshop.SendMessageResponse.words)
  return words_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageResponse::set_words(const ::std::string& value) {
  
  words_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.SendMessageResponse.words)
}
inline void SendMessageResponse::set_words(const char* value) {
  
  words_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.SendMessageResponse.words)
}
inline void SendMessageResponse::set_words(const char* value, size_t size) {
  
  words_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.SendMessageResponse.words)
}
inline ::std::string* SendMessageResponse::mutable_words() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.SendMessageResponse.words)
  return words_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageResponse::release_words() {
  // @@protoc_insertion_point(field_release:farmshop.SendMessageResponse.words)
  
  return words_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageResponse::set_allocated_words(::std::string* words) {
  if (words != NULL) {
    
  } else {
    
  }
  words_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), words);
  // @@protoc_insertion_point(field_set_allocated:farmshop.SendMessageResponse.words)
}

// optional string name = 3;
inline void SendMessageResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendMessageResponse::name() const {
  // @@protoc_insertion_point(field_get:farmshop.SendMessageResponse.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageResponse::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.SendMessageResponse.name)
}
inline void SendMessageResponse::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.SendMessageResponse.name)
}
inline void SendMessageResponse::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.SendMessageResponse.name)
}
inline ::std::string* SendMessageResponse::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.SendMessageResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMessageResponse::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.SendMessageResponse.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMessageResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.SendMessageResponse.name)
}

inline const SendMessageResponse* SendMessageResponse::internal_default_instance() {
  return &SendMessageResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// UpOrderRequest

// optional int32 type = 1;
inline void UpOrderRequest::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 UpOrderRequest::type() const {
  // @@protoc_insertion_point(field_get:farmshop.UpOrderRequest.type)
  return type_;
}
inline void UpOrderRequest::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:farmshop.UpOrderRequest.type)
}

// repeated .farmshop.BuyOneInfo buyList = 2;
inline int UpOrderRequest::buylist_size() const {
  return buylist_.size();
}
inline void UpOrderRequest::clear_buylist() {
  buylist_.Clear();
}
inline const ::farmshop::BuyOneInfo& UpOrderRequest::buylist(int index) const {
  // @@protoc_insertion_point(field_get:farmshop.UpOrderRequest.buyList)
  return buylist_.Get(index);
}
inline ::farmshop::BuyOneInfo* UpOrderRequest::mutable_buylist(int index) {
  // @@protoc_insertion_point(field_mutable:farmshop.UpOrderRequest.buyList)
  return buylist_.Mutable(index);
}
inline ::farmshop::BuyOneInfo* UpOrderRequest::add_buylist() {
  // @@protoc_insertion_point(field_add:farmshop.UpOrderRequest.buyList)
  return buylist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >*
UpOrderRequest::mutable_buylist() {
  // @@protoc_insertion_point(field_mutable_list:farmshop.UpOrderRequest.buyList)
  return &buylist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >&
UpOrderRequest::buylist() const {
  // @@protoc_insertion_point(field_list:farmshop.UpOrderRequest.buyList)
  return buylist_;
}

// optional int64 time = 3;
inline void UpOrderRequest::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 UpOrderRequest::time() const {
  // @@protoc_insertion_point(field_get:farmshop.UpOrderRequest.time)
  return time_;
}
inline void UpOrderRequest::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:farmshop.UpOrderRequest.time)
}

// optional int32 amount = 4;
inline void UpOrderRequest::clear_amount() {
  amount_ = 0;
}
inline ::google::protobuf::int32 UpOrderRequest::amount() const {
  // @@protoc_insertion_point(field_get:farmshop.UpOrderRequest.amount)
  return amount_;
}
inline void UpOrderRequest::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:farmshop.UpOrderRequest.amount)
}

// optional string message = 5;
inline void UpOrderRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpOrderRequest::message() const {
  // @@protoc_insertion_point(field_get:farmshop.UpOrderRequest.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpOrderRequest::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.UpOrderRequest.message)
}
inline void UpOrderRequest::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.UpOrderRequest.message)
}
inline void UpOrderRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.UpOrderRequest.message)
}
inline ::std::string* UpOrderRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.UpOrderRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpOrderRequest::release_message() {
  // @@protoc_insertion_point(field_release:farmshop.UpOrderRequest.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpOrderRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:farmshop.UpOrderRequest.message)
}

inline const UpOrderRequest* UpOrderRequest::internal_default_instance() {
  return &UpOrderRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// BuyOneInfo

// optional string name = 1;
inline void BuyOneInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BuyOneInfo::name() const {
  // @@protoc_insertion_point(field_get:farmshop.BuyOneInfo.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuyOneInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.BuyOneInfo.name)
}
inline void BuyOneInfo::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.BuyOneInfo.name)
}
inline void BuyOneInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.BuyOneInfo.name)
}
inline ::std::string* BuyOneInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.BuyOneInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BuyOneInfo::release_name() {
  // @@protoc_insertion_point(field_release:farmshop.BuyOneInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BuyOneInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:farmshop.BuyOneInfo.name)
}

// optional int32 weight = 2;
inline void BuyOneInfo::clear_weight() {
  weight_ = 0;
}
inline ::google::protobuf::int32 BuyOneInfo::weight() const {
  // @@protoc_insertion_point(field_get:farmshop.BuyOneInfo.weight)
  return weight_;
}
inline void BuyOneInfo::set_weight(::google::protobuf::int32 value) {
  
  weight_ = value;
  // @@protoc_insertion_point(field_set:farmshop.BuyOneInfo.weight)
}

// optional int32 price = 3;
inline void BuyOneInfo::clear_price() {
  price_ = 0;
}
inline ::google::protobuf::int32 BuyOneInfo::price() const {
  // @@protoc_insertion_point(field_get:farmshop.BuyOneInfo.price)
  return price_;
}
inline void BuyOneInfo::set_price(::google::protobuf::int32 value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:farmshop.BuyOneInfo.price)
}

inline const BuyOneInfo* BuyOneInfo::internal_default_instance() {
  return &BuyOneInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// UpOrderResponse

// optional int32 result = 1;
inline void UpOrderResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 UpOrderResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.UpOrderResponse.result)
  return result_;
}
inline void UpOrderResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.UpOrderResponse.result)
}

inline const UpOrderResponse* UpOrderResponse::internal_default_instance() {
  return &UpOrderResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ReceiveOrderEvent

// optional int32 id = 1;
inline void ReceiveOrderEvent::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 ReceiveOrderEvent::id() const {
  // @@protoc_insertion_point(field_get:farmshop.ReceiveOrderEvent.id)
  return id_;
}
inline void ReceiveOrderEvent::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:farmshop.ReceiveOrderEvent.id)
}

// optional .farmshop.OrderState state = 2;
inline void ReceiveOrderEvent::clear_state() {
  state_ = 0;
}
inline ::farmshop::OrderState ReceiveOrderEvent::state() const {
  // @@protoc_insertion_point(field_get:farmshop.ReceiveOrderEvent.state)
  return static_cast< ::farmshop::OrderState >(state_);
}
inline void ReceiveOrderEvent::set_state(::farmshop::OrderState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:farmshop.ReceiveOrderEvent.state)
}

inline const ReceiveOrderEvent* ReceiveOrderEvent::internal_default_instance() {
  return &ReceiveOrderEvent_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryOrderRequest

// optional int64 lastTime = 1;
inline void QueryOrderRequest::clear_lasttime() {
  lasttime_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QueryOrderRequest::lasttime() const {
  // @@protoc_insertion_point(field_get:farmshop.QueryOrderRequest.lastTime)
  return lasttime_;
}
inline void QueryOrderRequest::set_lasttime(::google::protobuf::int64 value) {
  
  lasttime_ = value;
  // @@protoc_insertion_point(field_set:farmshop.QueryOrderRequest.lastTime)
}

inline const QueryOrderRequest* QueryOrderRequest::internal_default_instance() {
  return &QueryOrderRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// QueryOrderResponse

// optional int32 result = 1;
inline void QueryOrderResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 QueryOrderResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.QueryOrderResponse.result)
  return result_;
}
inline void QueryOrderResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.QueryOrderResponse.result)
}

// repeated .farmshop.Order orders = 2;
inline int QueryOrderResponse::orders_size() const {
  return orders_.size();
}
inline void QueryOrderResponse::clear_orders() {
  orders_.Clear();
}
inline const ::farmshop::Order& QueryOrderResponse::orders(int index) const {
  // @@protoc_insertion_point(field_get:farmshop.QueryOrderResponse.orders)
  return orders_.Get(index);
}
inline ::farmshop::Order* QueryOrderResponse::mutable_orders(int index) {
  // @@protoc_insertion_point(field_mutable:farmshop.QueryOrderResponse.orders)
  return orders_.Mutable(index);
}
inline ::farmshop::Order* QueryOrderResponse::add_orders() {
  // @@protoc_insertion_point(field_add:farmshop.QueryOrderResponse.orders)
  return orders_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::farmshop::Order >*
QueryOrderResponse::mutable_orders() {
  // @@protoc_insertion_point(field_mutable_list:farmshop.QueryOrderResponse.orders)
  return &orders_;
}
inline const ::google::protobuf::RepeatedPtrField< ::farmshop::Order >&
QueryOrderResponse::orders() const {
  // @@protoc_insertion_point(field_list:farmshop.QueryOrderResponse.orders)
  return orders_;
}

inline const QueryOrderResponse* QueryOrderResponse::internal_default_instance() {
  return &QueryOrderResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// Order

// optional int32 id = 1;
inline void Order::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 Order::id() const {
  // @@protoc_insertion_point(field_get:farmshop.Order.id)
  return id_;
}
inline void Order::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:farmshop.Order.id)
}

// optional int32 type = 2;
inline void Order::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 Order::type() const {
  // @@protoc_insertion_point(field_get:farmshop.Order.type)
  return type_;
}
inline void Order::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:farmshop.Order.type)
}

// optional int64 time = 3;
inline void Order::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Order::time() const {
  // @@protoc_insertion_point(field_get:farmshop.Order.time)
  return time_;
}
inline void Order::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:farmshop.Order.time)
}

// optional int32 amount = 4;
inline void Order::clear_amount() {
  amount_ = 0;
}
inline ::google::protobuf::int32 Order::amount() const {
  // @@protoc_insertion_point(field_get:farmshop.Order.amount)
  return amount_;
}
inline void Order::set_amount(::google::protobuf::int32 value) {
  
  amount_ = value;
  // @@protoc_insertion_point(field_set:farmshop.Order.amount)
}

// optional string message = 5;
inline void Order::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Order::message() const {
  // @@protoc_insertion_point(field_get:farmshop.Order.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:farmshop.Order.message)
}
inline void Order::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:farmshop.Order.message)
}
inline void Order::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:farmshop.Order.message)
}
inline ::std::string* Order::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:farmshop.Order.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Order::release_message() {
  // @@protoc_insertion_point(field_release:farmshop.Order.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Order::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:farmshop.Order.message)
}

// repeated .farmshop.BuyOneInfo list = 6;
inline int Order::list_size() const {
  return list_.size();
}
inline void Order::clear_list() {
  list_.Clear();
}
inline const ::farmshop::BuyOneInfo& Order::list(int index) const {
  // @@protoc_insertion_point(field_get:farmshop.Order.list)
  return list_.Get(index);
}
inline ::farmshop::BuyOneInfo* Order::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:farmshop.Order.list)
  return list_.Mutable(index);
}
inline ::farmshop::BuyOneInfo* Order::add_list() {
  // @@protoc_insertion_point(field_add:farmshop.Order.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >*
Order::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:farmshop.Order.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::farmshop::BuyOneInfo >&
Order::list() const {
  // @@protoc_insertion_point(field_list:farmshop.Order.list)
  return list_;
}

// optional int32 state = 7;
inline void Order::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 Order::state() const {
  // @@protoc_insertion_point(field_get:farmshop.Order.state)
  return state_;
}
inline void Order::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:farmshop.Order.state)
}

inline const Order* Order::internal_default_instance() {
  return &Order_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteOrderRequest

// optional int32 id = 1;
inline void DeleteOrderRequest::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 DeleteOrderRequest::id() const {
  // @@protoc_insertion_point(field_get:farmshop.DeleteOrderRequest.id)
  return id_;
}
inline void DeleteOrderRequest::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:farmshop.DeleteOrderRequest.id)
}

inline const DeleteOrderRequest* DeleteOrderRequest::internal_default_instance() {
  return &DeleteOrderRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// DeleteOrderResponse

// optional int32 result = 1;
inline void DeleteOrderResponse::clear_result() {
  result_ = 0;
}
inline ::google::protobuf::int32 DeleteOrderResponse::result() const {
  // @@protoc_insertion_point(field_get:farmshop.DeleteOrderResponse.result)
  return result_;
}
inline void DeleteOrderResponse::set_result(::google::protobuf::int32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:farmshop.DeleteOrderResponse.result)
}

inline const DeleteOrderResponse* DeleteOrderResponse::internal_default_instance() {
  return &DeleteOrderResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace farmshop

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::farmshop::MsgId> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::farmshop::MsgId>() {
  return ::farmshop::MsgId_descriptor();
}
template <> struct is_proto_enum< ::farmshop::OrderState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::farmshop::OrderState>() {
  return ::farmshop::OrderState_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_farmshop_2eproto__INCLUDED
